{"version":3,"sources":["meetupControllers.js"],"names":["moment","suppressDeprecationWarnings","meetup","req","res","body","topic","location","happeningOn","tags","validateRecords","error","status","send","details","message","newMeetup","id","parseInt","meetupRecords","length","createdOn","format","split","push","data","meetupId","find","c","params","recording","i","isSameOrAfter","toLowerCase","newRsvp","rsvp","records","schema","Joi","string","min","required","validate"],"mappings":"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","file":"meetupControllers.js","sourceRoot":"C:/Users/Inclet/Desktop/Challenge/questioner/controllers","sourcesContent":["import meetupRecords from \"../data/meetupRecords\";\r\nimport meetupQuestions from '../data/meetupQuestions';\r\nimport rsvp from '../data/rsvpMeetups';\r\nimport Joi from 'joi';\r\nimport moment from 'moment';\r\n\r\nmoment.suppressDeprecationWarnings = true;\r\n\r\n\r\nclass meetup{\r\n\tconstructor(){\r\n\t\t\r\n\t}\r\n\r\n\tstatic create(req, res){\r\n\t\tconst { topic, location, happeningOn, tags } = req.body;\r\n\r\n\t\tconst { error } = validateRecords(req.body);\r\n\t\tif(error)\r\n\t\t\treturn res.status(400).send({\r\n                status:400,\r\n\t\t\t\terror: error.details[0].message\r\n\t\t\t});\r\n\r\n\t\tconst newMeetup = {\r\n\t\t\tid: parseInt(meetupRecords.length + 1 ),\r\n\t\t\ttopic,\r\n\t\t\tcreatedOn: moment().format('LL'),\r\n\t\t\tlocation,\r\n\t\t\thappeningOn : moment(happeningOn).format('LL'),\r\n\t\t\ttags : tags.split(' ') \r\n\r\n\t\t}\r\n\r\n\t\tmeetupRecords.push(newMeetup);\r\n\t\t\r\n\t\treturn res.status(201).send({\r\n\t\t\tstatus:201,\r\n\t\t\tdata:[\r\n\t\t\t    newMeetup\r\n\t\t\t]\r\n\t\t})\r\n\t}\r\n\r\n\r\n\tstatic fetchMeetup(req, res){\r\n\t\tconst meetupId = meetupRecords.find(c => c.id === parseInt(req.params.id));\r\n\t\tif(!meetupId)\r\n\t\t\treturn res.status(404).send({\r\n\t\t\t\tstatus:404,\r\n\t\t\t\terror : 'No such meetup Can Be Found'\r\n\t\t\t});\r\n\r\n\t\tconst {id, topic, location, happeningOn, tags} = meetupId;\r\n\r\n\t\tres.status(200).send({\r\n\t\t\tstatus:200,\r\n\t\t\tdata : [{\r\n\t\t\t\tid,\r\n\t\t\t\ttopic,\r\n\t\t\t\tlocation,\r\n\t\t\t\thappeningOn,\r\n\t\t\t\ttags\r\n\t\t\t}]\r\n\t\t})\r\n\t}\r\n\r\n\r\n\tstatic getAllMeetups(req, res){\r\n\t\treturn res.send({\r\n\t\t\tstatus : 200,\r\n\t\t\tdata : meetupRecords\r\n\t\t})\r\n\t}\r\n\r\n\r\n\tstatic getUpcomingMeetups(req, res){\r\n\r\n\t\tvar recording = [];\r\n\r\n\r\n\r\n        for(var i = 0; i < meetupRecords.length; i++){\r\n\r\n         if(moment(meetupRecords[i].happeningOn).isSameOrAfter(moment().format('LL')))\r\n         \t  recording.push(meetupRecords[i]);\r\n        }\r\n\r\n        if(recording.length > 0)\r\n        \treturn res.status(200).send({\r\n        \t\tstatus : 200,\r\n        \t\tdata : \r\n                   recording\r\n        \t\t\r\n        \t});\r\n        else\r\n        \treturn res.status(404).send({\r\n        \t\tstatus: 404,\r\n        \t\terror : \"No Upcoming meetup...\"\r\n        \t});\r\n    }\r\n\r\n     static respondRsvp(req, res){\r\n             \r\n             const meetupId = meetupRecords.find(c => c.id === parseInt(req.params.id));\r\n\r\n             if(meetupId){\r\n             \t\r\n             \t\r\n            if (req.body.status.toLowerCase() != \"yes\" && req.body.status.toLowerCase() != \"no\" && req.body.status.toLowerCase() != \"maybe\")\r\n            \treturn res.status(400).send({\r\n            \t\tstatus:400,\r\n            \t\terror : \"Bad Request. value assigned to status is not valid\"\r\n            \t})\r\n             const { topic } = meetupId;\r\n             const newRsvp = {\r\n                id : parseInt(rsvp.length) + 1,\r\n             \tmeetup : meetupId.id,\r\n             \ttopic,\r\n             \tstatus : req.body.status\r\n             }\r\n\r\n             rsvp.push(newRsvp);\r\n\r\n             return res.status(201).send({\r\n             \tstatus : 201,\r\n             \tdata : [{\r\n                  meetup : newRsvp.meetup,\r\n                  topic : newRsvp.topic,\r\n                  status : newRsvp.status\r\n             \t}\r\n             \t]\r\n             })\r\n         }\r\n\r\n         if(!meetupId)\r\n         \treturn res.status(404).send({\r\n         \t\tstatus : 404,\r\n         \t\terror : 'No such ID can be found'\r\n         \t})\r\n     }\r\n\r\n\r\n\r\n}\r\n\r\n\r\nfunction validateRecords(records){\r\n\tconst schema = {\r\n     \t   topic : Joi.string().min(4).required(),\r\n     \t   location: Joi.string().min(2).required(),\r\n     \t   happeningOn : Joi.string().min(2).required(),\r\n     \t   tags : Joi.string().min(2).required()\r\n          };\r\n\r\n     return Joi.validate(records, schema);\r\n\r\n     }\r\n\r\n\r\nexport default meetup;"]}